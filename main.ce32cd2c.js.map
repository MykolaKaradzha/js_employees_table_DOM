{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","tbody","tBodies","header","tHead","isASCSorted","getSalary","salaryString","Number","slice","replace","addEventListener","e","rows","Array","from","columnName","target","innerText","index","cellIndex","sort","rowA","rowB","cellValueA","cells","cellValueB","localeCompare","forEach","row","append","parentElement","classList","add","remove","body","insertAdjacentHTML","createNotification","type","notification","createElement","dataset","qa","titleMessage","descriptionMessage","innerHTML","formButton","nameInput","positionInput","officeSelect","ageInput","salaryInput","convertSalary","salary","toLocaleString","style","currency","maximumFractionDigits","validateForm","value","length","addEmployee","preventDefault","setTimeout","inputElement","offices","children","map","option","addTextHandler","newCell","includes","isNaN","validateNewValue","replaceWith","ev","key"],"mappings":"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","file":"main.ce32cd2c.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\n// filter elements\n\nconst table = document.querySelector('table');\nconst tbody = table.tBodies[0];\nconst header = table.tHead;\nlet isASCSorted = true;\nconst getSalary = (salaryString) => {\n  return Number(salaryString\n    .slice(1)\n    .replace(',', ''));\n};\n\nheader.addEventListener('click', (e) => {\n  const rows = Array.from(table.tBodies[0].rows);\n  const columnName = e.target.innerText;\n  const index = e.target.cellIndex;\n\n  rows.sort((rowA, rowB) => {\n    const cellValueA = isASCSorted\n      ? rowA.cells[index].innerText\n      : rowB.cells[index].innerText;\n    const cellValueB = isASCSorted\n      ? rowB.cells[index].innerText\n      : rowA.cells[index].innerText;\n\n    if (columnName === 'Salary') {\n      return getSalary(cellValueA) - getSalary(cellValueB);\n    }\n\n    if (typeof cellValueA === 'string') {\n      return cellValueA.localeCompare(cellValueB);\n    }\n\n    return cellValueA - cellValueB;\n  });\n\n  rows.forEach(row => tbody.append(row));\n  isASCSorted = !isASCSorted;\n});\n\n// select row on element click\n\ntbody.addEventListener('click', (e) => {\n  const row = e.target.parentElement;\n\n  row.classList.add('active');\n\n  row.addEventListener('mouseleave', () => {\n    row.classList.remove('active');\n  });\n});\n\n// form added\n\ndocument.body.insertAdjacentHTML('beforeend', `\n  <form class=\"new-employee-form\">\n    <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n\n    <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\">\n    </label>\n\n    <label>Office:\n      <select name=\"office\" data-qa=\"office\">\n        <option>Tokyo</option>\n\n        <option>Singapore</option>\n\n        <option>London</option>\n\n        <option>New York</option>\n\n        <option>Edinburgh</option>\n\n        <option>San Francisco</option>\n      </select>\n    </label>\n\n    <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n\n    <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n\n    <button>Save to table</button>\n  </form>`\n);\n// notification creation\n\nconst createNotification = (type) => {\n  const notification = document.createElement('div');\n\n  notification.classList.add('notification', type);\n  notification.dataset.qa = 'notification';\n\n  const titleMessage = type === 'success'\n    ? 'Success!'\n    : 'Error occurred!';\n  const descriptionMessage = type === 'success'\n    ? 'New employee added.'\n    : 'Please, enter correct data!';\n\n  notification.innerHTML = `\n    <h2 class=\"title\">${titleMessage}</h2>\n    <p>${descriptionMessage}</p>`;\n  document.body.append(notification);\n};\n\n// validation form and new employee adding\n\nconst formButton = document.querySelector('button');\nconst nameInput = document.querySelector('[name = name]');\nconst positionInput = document.querySelector('[name = position]');\nconst officeSelect = document.querySelector('[name = office]');\nconst ageInput = document.querySelector('[name = age]');\nconst salaryInput = document.querySelector('[name = salary]');\nconst convertSalary = (salary) => Number(salary)\n  .toLocaleString('en-US', {\n    style: 'currency', currency: 'USD', maximumFractionDigits: 0,\n  });\n\nconst validateForm = () => {\n  switch (true) {\n    case nameInput.value.length < 4:\n    case Number(ageInput.value) < 18:\n    case Number(ageInput.value) > 90:\n    case salaryInput.value:\n    case positionInput.value:\n      return false;\n    default:\n      return true;\n  }\n};\n\nconst addEmployee = () => {\n  tbody.insertAdjacentHTML('beforeend', `\n  <td>${nameInput.value}</td>\n\n  <td>${positionInput.value}</td>\n\n  <td>${officeSelect.value}</td>\n\n  <td>${Number(ageInput.value)}</td>\n\n  <td>${convertSalary(salaryInput.value)}</td>\n`);\n  nameInput.value = '';\n  positionInput.value = '';\n  officeSelect.value = '';\n  ageInput.value = '';\n  salaryInput.value = '';\n};\n\nformButton.addEventListener('click', (e) => {\n  e.preventDefault();\n\n  setTimeout(() => {\n    document.querySelector('.notification').remove();\n  }, 3000);\n\n  if (!validateForm()) {\n    createNotification('error');\n\n    return;\n  }\n\n  createNotification('success');\n  addEmployee();\n});\n\n// table-cells editing\n\ntbody.addEventListener('dblclick', (e) => {\n  const inputElement = document.createElement('input');\n  const index = e.target.cellIndex;\n  const offices = Array.from(officeSelect.children).map(option =>\n    option.innerHTML);\n  const validateNewValue = (value) => {\n    switch (true) {\n      case !value.length:\n      case index === 2 && !offices.includes(value):\n      case ((index === 3 || index === 4) && isNaN(+value)) || +value <= 0:\n        return e.target.innerHTML;\n      case index === 4 && !isNaN(+value):\n        return convertSalary(value);\n      default:\n        return value;\n    }\n  };\n  const addTextHandler = () => {\n    const newCell = document.createElement('td');\n\n    newCell.innerHTML = validateNewValue(inputElement.value);\n    inputElement.replaceWith(newCell);\n  };\n\n  inputElement.classList.add('cell-input');\n  inputElement.value = e.target.innerHTML;\n  e.target.replaceWith(inputElement);\n  inputElement.addEventListener('blur', addTextHandler);\n  inputElement.addEventListener('mouseout', addTextHandler);\n\n  inputElement.addEventListener('keypress', (ev) => {\n    if (ev.key !== 'Enter') {\n      return;\n    }\n    addTextHandler();\n  });\n});\n"]}